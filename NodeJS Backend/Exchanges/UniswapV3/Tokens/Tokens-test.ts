// return string is print data generated by the test.
import {OrderDirection, QueryHelper} from "../../../GraphQL/QueryHelper";
import {IToken} from "./IToken";
import {getTokens} from "./Tokens";
import {Pool} from "../Pools/Pool";

async function testGetTokens(first:number, token_symbol:string = "", orderBy:string = 'symbol', direction:OrderDirection = OrderDirection.desc)
{
    const tokens:IToken[] =
        await getTokens(first, orderBy, direction);
    let output_str:string = "";
    if(token_symbol != "")
    {
        let found_it:boolean = false;
        for(let token of tokens) {
            if(token.symbol === token_symbol) {
                found_it = true;
                output_str += `
                    Found token ${token.symbol}!`;
            }
        }
        if(!found_it) output_str += `
            Searched ${first} tokens.
            Couldn't find token ${token_symbol}`
    }
    else {
        for (let i = 0; i < tokens.length; i++) {
            let token = tokens[i];
            output_str += `
        
            Token name: ${token.name}
            Token symbol: ${token.symbol}
            Token id: ${token.id}
            White list pools:`
            const pools: Pool[] = token.whitelistPools;
            for (let j = 0; j < pools.length; j++) {
                let pool: Pool = pools[j];
                output_str += `
                ${pool.id}`
            }
        }
    }

    console.log(output_str);
}